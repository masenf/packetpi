---
- name: update apt package cache
  ansible.builtin.apt:
    update_cache: yes
- name: create direwolf user
  ansible.builtin.user:
    name: direwolf
    groups:
      - audio
      - video
      - netdev
      - dialout
- name: install direwolf packages
  ansible.builtin.package:
    name:
      - git
      - gcc
      - g++
      - make
      - cmake
      - libasound2-dev
      - libudev-dev
      - libavahi-client-dev
      - alsa-utils
    state: present
- name: Checkout direwolf dev
  ansible.builtin.git:
    repo: 'https://github.com/wb2osz/direwolf.git'
    dest: /opt/direwolf
    #version: dev
    version: master
  notify: build direwolf package
- name: /etc/direwolf
  ansible.builtin.file:
    path: /etc/direwolf
    state: directory
- name: copy templates
  ansible.builtin.template:
    src: templates/direwolf.conf.j2
    dest: /etc/direwolf/{{ item.name }}.conf
    owner: root
    group: root
    mode: 0644
  register: direwolf_templates
  loop: "{{ instances }}"
- name: check direwolf binary
  ansible.builtin.stat:
    path: /usr/local/bin/direwolf
  register: direwolf_binary
# have to build here to avoid dependent services being unable to start direwolf
# since their unit enable handlers run before direwolf's build handler
- name: build direwolf package
  ansible.builtin.script:
    cmd: build_direwolf.sh
  notify: restart all direwolf
  when: not direwolf_binary.stat.exists
- name: direwolf service enabled
  loop: "{{ direwolf_templates.results | map(attribute='item') | map(attribute='name') | list }}"
  ansible.builtin.systemd:
    name: direwolf@{{ item }}
    daemon_reload: yes
    enabled: yes
  notify: restart direwolf
